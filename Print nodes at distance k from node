void find(BinaryTreeNode<int> *root, int k){
     if (root==NULL || k<0){
        return;
    }
    if (k==0){
        cout<<root->data<<endl;
        return;
    }
 find(root->left,k-1);
    find(root->right,k-1);
}

int helper(BinaryTreeNode<int> *root, int node, int k){
    if(root==NULL){
        return -1;
    }
    if(root->data==node)
    {
        find(root,k);
        return 0;
    }
    int ld=helper(root->left, node, k);
        if(ld!=-1)
        {if(ld+1 == k){
            cout<<root->data<<" ";
                
        }else{
        find(root->right,k-ld-2);}
        return ld+1;}
    int rd=helper(root->right, node, k);
        if(rd!=-1)
        {if(rd+1 == k){
            cout<<root->data<<" ";
                
        }else{
        find(root->left,k-rd-2);}
        return rd+1;}
    return -1;
    
}
void nodesAtDistanceK(BinaryTreeNode<int> *root, int node, int k) {
    // Write your code here
helper(root,node,k);
}
