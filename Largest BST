#include<climits>
class A{
    public:
    bool isBst;
    int min;
    int max;
    int height;
};
A helper(BinaryTreeNode<int> *root)
{
    if(root==NULL)
    {A output;
     output.min=INT_MAX;
     output.max=INT_MIN;
     output.isBst=true;
     output.height=0;
     return output;
    }
    int height;
    A left=helper(root->left);
    A right=helper(root->right);
    int minimum=min(root->data,min(left.min,right.min));
    int maximum=max(root->data,max(left.max,right.max));    
    if(left.isBst && right.isBst)
    { height = 1+max(left.height,right.height);}
    else
    { height=max(left.height,right.height);}
    bool f=(root->data>left.max&& root->data<=right.min&& left.isBst && right.isBst );
    A output;
    output.min=minimum;
     output.max=maximum;
     output.isBst=f;
     output.height=height;
     return output;
}
    
    
int largestBSTSubtree(BinaryTreeNode<int> *root) {
    // Write your code here
    A ans=helper(root);
    return ans.height;

}
